#!/usr/bin/env node

filename = process.argv[2] || 'db/default.sqlite3'

const knex = require('knex')({
  client: 'sqlite3',
  debug: true,
  connection: {
    filename: filename
  }
})

// TODO: 如果这里没有对 Promise 调用执行 then 方法，程序就会提前退出
knex.schema.createTable('emails', function (table) {
  table.increments()
  table.string('fromName')
  table.string('fromAddress').notNullable()
  table.string('toName')
  table.string('toAddress').notNullable()
  table.text('subject')
  table.string('type').defaultTo('text')
  table.text('content').notNullable()
  table.timestamp('createdAt').defaultTo(knex.fn.now())
}).then(() => {
  console.log('Table emails created!')
})

// TODO: messages 是否可以重新命名
knex.schema.createTable('messages', function (table) {
  table.increments()
  table.string('toMobile').notNullable()
  table.string('content').notNullable()
  table.timestamp('createdAt').defaultTo(knex.fn.now())
}).then(() => {
  console.log('Table messages created!')
})

// TODO: 数据库的唯一性没有设置
knex.schema.createTable('tags', function (table) {
  table.increments()
  table.string('name').notNullable()
  table.string('targetType').notNullable()
  table.integer('targetId').notNullable()
}).then(() => {
  console.log('Table tags created!')
})

knex.schema.createTable('templates', function (table) {
  table.increments()
  table.string('category').notNullable()
  table.string('name').notNullable()
  table.text('subject')
  table.text('content').notNullable()
  // 可否使用枚举类型
  table.string('contentType').notNullable().defaultTo('text')
  table.timestamp('createdAt').defaultTo(knex.fn.now())
}).then(() => {
  console.log('Table templates created!')
})
