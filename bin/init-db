#!/usr/bin/env node

const knex = require('../server/dao/knex')

async function createEmails () {
  await knex.schema.createTable('Emails', function (table) {
    table.increments()
    table.string('fromName')
    table.string('fromAddress').notNullable()
    table.string('toName')
    table.string('toAddress').notNullable()
    table.string('subject')
    table.enum('type', ['text', 'html']).defaultTo('text')
    table.text('content').notNullable()
    table.timestamp('createdAt').defaultTo(knex.fn.now())
  }).then(() => {
    console.log('Table emails created!')
  })
}

async function createMessages () {
  await knex.schema.createTable('ShortMessages', function (table) {
    table.increments()
    table.string('toMobile').notNullable()
    table.string('content').notNullable()
    table.timestamp('createdAt').defaultTo(knex.fn.now())
  }).then(() => {
    console.log('Table messages created!')
  })
}

async function createTags () {
  await knex.schema.createTable('Tags', function (table) {
    table.increments()
    table.string('name').notNullable()
    table.enum('targetType', ['Email', 'ShortMessage', 'Template']).notNullable()
    table.integer('targetId').notNullable()

    table.unique(['name', 'targetType', 'targetId'])
  }).then(() => {
    console.log('Table tags created!')
  })
}

async function createTemplates () {
  await knex.schema.createTable('Templates', function (table) {
    table.increments()
    table.string('category').notNullable()
    table.string('name').notNullable()
    table.text('subject')
    table.text('content').notNullable()
    table.enum('contentType', ['text', 'html']).notNullable().defaultTo('text')
    table.timestamp('createdAt').defaultTo(knex.fn.now())
  }).then(() => {
    console.log('Table templates created!')
  })
}

async function createPrivateNumberBindings () {
  await knex.schema.createTable('PrivateNumberBindings', function (table) {
    table.increments()
    table.string('phoneNumberA').notNullable()
    table.string('phoneNumberB').notNullable()
    table.string('virtualNumber').notNullable()
    table.timestamp('createdAt').defaultTo(knex.fn.now())
  }).then(() => {
    console.log('Table privateNumbers created!')
  })
}

async function createPrivateNumberCalls () {
  await knex.schema.createTable('PrivateNumberCalls', function (table) {
    table.increments()
    table.string('fromPhoneNumber').notNullable()
    table.string('toPhoneNumber').notNullable()
    table.string('virtualNumber').notNullable()
    table.datetime('callingAt').notNullable()
    table.datetime('connectedAt').notNullable()
    table.datetime('hungUpAt').notNullable()
    table.integer('bindingId')

    table.foreign('bindingId').references('privateNumberBindings.id')
  }).then(() => {
    console.log('Table privateCalls created!')
  })
}

;(async function () {
  try {
    await createEmails()
    await createMessages()
    await createTags()
    await createTemplates()
    await createPrivateNumberBindings()
    await createPrivateNumberCalls()
  } finally {
    await knex.destroy()
  }
})()
